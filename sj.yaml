apiVersion: batch/v1
kind: Job
metadata:
#  generateName: training-microbenchmark-
  name: test-job
  labels:
    tessellations.google.com/workload: training-microbenchmark
spec:
  completions: 1  # Total number of completions desired
  parallelism: 1  # Number of Pods to run in parallel
  backoffLimit: 1 # Number of retries before considering the Job failed
  template:
    metadata:
      labels:
#        tessellations.google.com/workload: training-microbenchmark
        app: debug
      annotations:
        gke-gcsfuse/volumes: "true"
        gke-gcsfuse/cpu-limit: "0"
        gke-gcsfuse/memory-limit: "0"
        gke-gcsfuse/ephemeral-storage-limit: "0"
    spec:
      containers:
      - name: benchmark
        image: us-west1-docker.pkg.dev/gcs-tess/ssiog/initial_iog@sha256:849e476b03156e70462917f76afea881ce9ac62b0c96ac3cb6e7f9b125502562 #ubuntu:latest #
#        image: us-west1-docker.pkg.dev/gcs-tess/hello-repo/helloworld-gke:latest
#        ports:
#        - containerPort: 5670
#        securityContext:
#          privileged: true
#        command: [ "sleep" ]
#        args: [ "infinity" ]
#        volumeMounts:
#        - name: mnt-inputs
#          mountPath: /data
#          readOnly: false
        command:
        - sh
#        - /bin/bash
#        - -c
#        - |
#          args=(
#            --prefix /mnt/gcsfuse-inputs
#            --object-count-limit=32
#            --epochs=2
#            --background-threads=8
#            --sample-size=65536
#            --batch-size=32
#            # The following environment variables are not available in a regular Job
#            # --group-member-id=${JOB_COMPLETION_INDEX}
#            # --group-coordinator-address=${JOBSET_NAME}-${REPLICATED_JOB_NAME}-0-0.${JOBSET_NAME}
#            --group-coordinator-port=5670
#            --group-size=4
#            # -- jobset-name:${JOBSET_NAME} 0_testing
#          )
#          mkdir -p /mnt/benchmark-output/$(JOB_NAME) || true  # Use JOB_NAME instead of JOBSET_NAME
#          /app/training.py "${args[@]}"
#        volumeMounts:
##        - mountPath: /mnt/benchmark-output
##          name: gcsfuse-outputs
##          readOnly: false
#        - mountPath: /mnt/benchmark-inputs
#          name: mnt-inputs
##          name: gcsfuse-outputs
#          readOnly: false
#      schedulerName: default-scheduler
      restartPolicy: Never
#      hostNetwork: true
#      dnsPolicy: ClusterFirstWithHostNet
#      terminationGracePeriodSeconds: 30
      serviceAccountName: princer-ssiog-ksa-e2892743606541ae
      volumes:
#      - name: gcsfuse-outputs
#        csi:
#          driver: gcsfuse.csi.storage.gke.io
#          volumeAttributes:
#            bucketName: princer-ssiog-metrics-bkt
#            bucketName: princer-ssiog-data-bkt
      - name: mnt-inputs
        persistentVolumeClaim:
          claimName: data-bucket-pvc-48f309ac976c2a2c

#
#  gcloud storage buckets add-iam-policy-binding gs://princer-ssiog-data-bkt \
#  --member "principal://iam.googleapis.com/projects/222564316065/locations/global/workloadIdentityPools/gcs-tess.svc.id.goog/subject/ns/sa/princer-ssiog-ksa-e2892743606541ae" \
#  --role "roles/storage.objectUser"
  
#  gcloud artifacts repositories add-iam-policy-binding us-west1-docker.pkg.dev/gcs-tess/ssiog --location us-west1\
#  --member="principalSet://iam.googleapis.com/projects/222564316065/locations/global/attribute.actor/kubernetes:ns:default/sa:princer-ssiog-ksa-e2892743606541ae" \
#  --role="roles/artifactregistry.reader"

#  gcloud projects add-iam-policy-binding projects/gcs-tess \
#  --member='principal://iam.googleapis.com/projects/222564316065/locations/global/workloadIdentityPools/gcs-tess.svc.id.goog/subject/ns/default/sa/princer-ssiog-ksa-e2892743606541ae' \
#  --role='roles/artifactregistry.reader'

#  gcloud projects add-iam-policy-binding projects/gcs-tess \
#  --member='principal://iam.googleapis.com/projects/222564316065/locations/global/workloadIdentityPools/gcs-tess.svc.id.goog/subject/ns/default/sa/princer-ssiog-ksa-e2892743606541ae' \
#  --role='roles/storage.admin'



#
#apiVersion: batch/v1
#kind: Job
#metadata:
#  name: test-job
#  labels:
#    tessellations.google.com/workload: training-microbenchmark
#spec:
#  completions: 1  # Total number of completions desired
#  parallelism: 1  # Number of Pods to run in parallel
#  backoffLimit: 1 # Number of retries before considering the Job failed
#  template:
#    metadata:
#      labels:
#        app: debug
#      annotations:
#        gke-gcsfuse/volumes: "true"
#        gke-gcsfuse/cpu-limit: "0"
#        gke-gcsfuse/memory-limit: "0"
#        gke-gcsfuse/ephemeral-storage-limit: "0"
#    spec:
#      containers:
#      - name: benchmark
#        image: us-west1-docker.pkg.dev/gcs-tess/ssiog/initial_iog@sha256:849e476b03156e70462917f76afea881ce9ac62b0c96ac3cb6e7f9b125502562
#        command:
#        - sh
#        volumeMounts:
#        - mountPath: /mnt/benchmark-inputs
#          name: mnt-inputs
#          readOnly: false
#      restartPolicy: Never
#      serviceAccountName: princer-ssiog-ksa-e2892743606541ae
#      volumes:
#      - name: mnt-inputs
#        persistentVolumeClaim:
#          claimName: data-bucket-pvc-48f309ac976c2a2c
